import 'dart:async';
import 'dart:convert';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:quotes_season/modal.dart';
import 'package:http/http.dart' as http;
import 'package:simple_animations/simple_animations.dart';

class Quote extends StatefulWidget {
  @override
  _QuoteState createState() => _QuoteState();
}

Future<List<Autogenerated>> fetchQuote() async {
  final response =
  await http.get('https://type.fit/api/quotes');

  if (response.statusCode == 200) {
    // If the server did return a 200 OK response,
    List jsonList = json.decode(response.body);
    List list = jsonList.map((elem) => Autogenerated.fromJson(elem)).toList();
    return list;
  }
  else {
    // If the server did not return a 200 OK response,
    // then throw an exception.
    throw Exception('Failed');
  }
}

class _QuoteState extends State<Quote> {
  Future<List<Autogenerated>> futureAutogenerated;

  @override
  void initState() {
    super.initState();
    futureAutogenerated = fetchQuote();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        padding: EdgeInsets.all(20),
        child: Container(
          child: FutureBuilder(
              future: futureAutogenerated,
              builder: (context, snapshot) {
                if(snapshot.hasData) {
                  return ListView.builder(itemCount: snapshot.data.length, itemBuilder: (context, index) => Card(
                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16.0)),
                    shadowColor: Colors.black,
                    elevation: 4.0,
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        Row(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: <Widget>[
                            Expanded(
                              child: Padding(
                                padding: const EdgeInsets.all(8.0),
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: <Widget>[
                                    Text(
                                      "${snapshot.data[index].text}",
                                      style: TextStyle(
                                          fontSize: 18
                                      ),
                                    ),
                                    SizedBox(height: 8,),
                                    Text(
                                      "- ${snapshot.data[index].author}",
                                      style: TextStyle(
                                          fontWeight: FontWeight.bold,
                                          fontStyle: FontStyle.italic,
                                        color: Colors.grey
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                            Container(
                              clipBehavior: Clip.antiAlias,
                              width: 120,
                              height: 110,
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.only(
                                  bottomLeft: Radius.circular(76)
                                )
                              ),
                              child: Image.asset("images/williamshakespeare.jpg", fit: BoxFit.cover,),
                            )
                          ],
                        ),
                        Divider(
                          color: Colors.white,
                        ),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.end,
                          children: <Widget>[
                            IconButton(
                              icon: Icon(
                                Icons.favorite,
                                color: Colors.amber,
                              ),
                            ),
                            SizedBox(width: 14,),
                            IconButton(
                              icon: Icon(
                                Icons.share,
                                color: Colors.black,
                              ),
                            )
                          ],
                        )
                      ],
                    ),
                  ));
                }else if(snapshot.hasError) {
                  return Center(child: Text("${snapshot.error}"));
                }

                return Center(
                  child: CircularProgressIndicator(),
                );
              }),
        )
      ),
    );
  }
}

